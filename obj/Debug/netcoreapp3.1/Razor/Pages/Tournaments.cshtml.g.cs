#pragma checksum "C:\Users\ilari\source\repos\TournamentApplication\TournamentApplication\Pages\Tournaments.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "8e0b157b22e3b39e3dc04dff4b259b89b4c655d9"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(TournamentApplication.Pages.Pages_Tournaments), @"mvc.1.0.razor-page", @"/Pages/Tournaments.cshtml")]
namespace TournamentApplication.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\ilari\source\repos\TournamentApplication\TournamentApplication\Pages\_ViewImports.cshtml"
using TournamentApplication;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\ilari\source\repos\TournamentApplication\TournamentApplication\Pages\Tournaments.cshtml"
using TournamentApplication.Components;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\ilari\source\repos\TournamentApplication\TournamentApplication\Pages\Tournaments.cshtml"
using TournamentApplication.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"8e0b157b22e3b39e3dc04dff4b259b89b4c655d9", @"/Pages/Tournaments.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"d3f376b703c8e0d8b8a0511bccffdd8d41a8c4b3", @"/Pages/_ViewImports.cshtml")]
    public class Pages_Tournaments : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
            WriteLiteral("\r\n\r\n\r\n");
#nullable restore
#line 9 "C:\Users\ilari\source\repos\TournamentApplication\TournamentApplication\Pages\Tournaments.cshtml"
 if (Model == null)
{

#line default
#line hidden
#nullable disable
            WriteLiteral("    <p>No tournaments</p>\r\n");
#nullable restore
#line 12 "C:\Users\ilari\source\repos\TournamentApplication\TournamentApplication\Pages\Tournaments.cshtml"
}
else
{

#line default
#line hidden
#nullable disable
            WriteLiteral("    <p>Haha yes tournament</p>\r\n");
#nullable restore
#line 16 "C:\Users\ilari\source\repos\TournamentApplication\TournamentApplication\Pages\Tournaments.cshtml"
}

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<div class=\"row\">\r\n    <div class=\"col-md-6 col-md-offset-3\">\r\n");
#nullable restore
#line 20 "C:\Users\ilari\source\repos\TournamentApplication\TournamentApplication\Pages\Tournaments.cshtml"
         using (Html.BeginForm())
        {

#line default
#line hidden
#nullable disable
            WriteLiteral("            <div class=\"form-group\">\r\n                ");
#nullable restore
#line 23 "C:\Users\ilari\source\repos\TournamentApplication\TournamentApplication\Pages\Tournaments.cshtml"
           Write(Html.LabelFor(x => x.TournamentTitle));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                ");
#nullable restore
#line 24 "C:\Users\ilari\source\repos\TournamentApplication\TournamentApplication\Pages\Tournaments.cshtml"
           Write(Html.TextBoxFor(x => x.TournamentTitle, new { @class = "form-control" }));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n            </div>\r\n            <div class=\"form-group\">\r\n                ");
#nullable restore
#line 27 "C:\Users\ilari\source\repos\TournamentApplication\TournamentApplication\Pages\Tournaments.cshtml"
           Write(Html.LabelFor(x => x.TournamentInfo));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                ");
#nullable restore
#line 28 "C:\Users\ilari\source\repos\TournamentApplication\TournamentApplication\Pages\Tournaments.cshtml"
           Write(Html.TextBoxFor(x => x.TournamentInfo, new { @class = "form-control" }));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n            </div>\r\n            <div class=\"form-group\">\r\n                <button id=\"btnSubmitJson\" type=\"submit\" class=\"btn btn-default\">Submit</button>\r\n            </div>\r\n");
#nullable restore
#line 33 "C:\Users\ilari\source\repos\TournamentApplication\TournamentApplication\Pages\Tournaments.cshtml"
        }

#line default
#line hidden
#nullable disable
            WriteLiteral("    </div>\r\n</div>\r\n\r\n");
            DefineSection("scripts", async() => {
                WriteLiteral("\r\n    <script type=\"text/javascript\">\r\n    async function getFormDataAsJson() {\r\n    return {\r\n    \'Html.IdFor(x => x.TournamentTitle)\': $(\'#");
#nullable restore
#line 42 "C:\Users\ilari\source\repos\TournamentApplication\TournamentApplication\Pages\Tournaments.cshtml"
                                         Write(Html.IdFor(x => x.TournamentTitle));

#line default
#line hidden
#nullable disable
                WriteLiteral("\').val(),\r\n    \'Html.IdFor(x => x.TournamentInfo)\': $(\'#");
#nullable restore
#line 43 "C:\Users\ilari\source\repos\TournamentApplication\TournamentApplication\Pages\Tournaments.cshtml"
                                        Write(Html.IdFor(x => x.TournamentInfo));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"').val()
    }
    }

    $('#btnSubmitJson').click(function () {
    var data = getFormDataAsJson();
    postToController(JSON.stringify(data), ""application/json; charset=utf-8"");

    return false;
    });
        </script>
    <script type=""text/javascript"">

        function postToController(data, dataType) {
            console.log('submitting...');
            $.ajax({
                type: 'POST',
                url: 'api/tournaments/',
                dataType: 'json',
                contentType: dataType,
                data: JSON.stringify({ data }),
                success: function (result) {
                    console.log('success...')
                    console.log(result);
                },
                failure: function (errMsg) {
                    alert(errMsg);
                }
            });
        }


    </script>
    <script src=""framework/blazor.server.js""></script>

");
            }
            );
            WriteLiteral("\r\n");
#nullable restore
#line 80 "C:\Users\ilari\source\repos\TournamentApplication\TournamentApplication\Pages\Tournaments.cshtml"
Write(await Html.RenderComponentAsync<Tournaments>(RenderMode.ServerPrerendered));

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<TournamentApplication.Models.Tournament> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<TournamentApplication.Models.Tournament> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<TournamentApplication.Models.Tournament>)PageContext?.ViewData;
        public TournamentApplication.Models.Tournament Model => ViewData.Model;
    }
}
#pragma warning restore 1591
