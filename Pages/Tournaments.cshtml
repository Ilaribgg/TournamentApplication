@page
@model TournamentApplication.Models.Tournament

@using TournamentApplication.Components
@using TournamentApplication.Models



@if (Model == null)
{
    <p>No tournaments</p>
}
else
{
    <p>Haha yes tournament</p>
}

<div class="row">
    <div class="col-md-6 col-md-offset-3">
        @using (Html.BeginForm())
        {
            <div class="form-group">
                @Html.LabelFor(x => x.TournamentTitle)
                @Html.TextBoxFor(x => x.TournamentTitle, new { @class = "form-control" })
            </div>
            <div class="form-group">
                @Html.LabelFor(x => x.TournamentInfo)
                @Html.TextBoxFor(x => x.TournamentInfo, new { @class = "form-control" })
            </div>
            <div class="form-group">
                <button id="btnSubmitJson" type="submit" class="btn btn-default">Submit</button>
            </div>
        }
    </div>
</div>

@section scripts
{
    <script type="text/javascript">
    async function getFormDataAsJson() {
    return {
    'Html.IdFor(x => x.TournamentTitle)': $('#@Html.IdFor(x => x.TournamentTitle)').val(),
    'Html.IdFor(x => x.TournamentInfo)': $('#@Html.IdFor(x => x.TournamentInfo)').val()
    }
    }

    $('#btnSubmitJson').click(function () {
    var data = getFormDataAsJson();
    postToController(JSON.stringify(data), "application/json; charset=utf-8");

    return false;
    });
        </script>
    <script type="text/javascript">

        function postToController(data, dataType) {
            console.log('submitting...');
            $.ajax({
                type: 'POST',
                url: 'api/tournaments/',
                dataType: 'json',
                contentType: dataType,
                data: JSON.stringify({ data }),
                success: function (result) {
                    console.log('success...')
                    console.log(result);
                },
                failure: function (errMsg) {
                    alert(errMsg);
                }
            });
        }


    </script>
    <script src="framework/blazor.server.js"></script>

}

@(await Html.RenderComponentAsync<Tournaments>(RenderMode.ServerPrerendered))
